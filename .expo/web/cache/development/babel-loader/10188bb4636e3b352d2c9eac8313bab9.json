{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Slider from \"@react-native-community/slider\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport Grid from \"./CanvasGrid\";\n\nvar Canvas = function (_Component) {\n  _inherits(Canvas, _Component);\n\n  var _super = _createSuper(Canvas);\n\n  function Canvas(props) {\n    var _this;\n\n    _classCallCheck(this, Canvas);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Canvas, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          route = _this$props.route,\n          navigation = _this$props.navigation;\n\n      var _ref = route.params == null ? \"white\" : route.params,\n          newColor = _ref.newColor;\n\n      return React.createElement(View, null, React.createElement(Grid, null), React.createElement(Button, {\n        title: \"Pick Color\",\n        onPress: function onPress() {\n          _this2.props.navigation.navigate(\"ColorPicker\");\n        }\n      }), React.createElement(Button, {\n        title: \"Set Color\",\n        onPress: function onPress() {\n          _this2.setState({\n            color: newColor\n          });\n        }\n      }), React.createElement(Text, null, \"color:\", JSON.stringify(newColor)));\n    }\n  }]);\n\n  return Canvas;\n}(Component);\n\nCanvas.defaultProps = {};\nexport { Canvas as default };\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/75196/Documents/GitHub/Javascript/final/components/Canvas.js"],"names":["React","Component","PropTypes","Slider","Picker","Grid","Canvas","props","state","route","navigation","params","newColor","navigate","setState","color","JSON","stringify","defaultProps","styles","StyleSheet","create"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;;;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,MAAT,QAAuB,6BAAvB;AACA,OAAOC,IAAP;;IAEqBC,M;;;;;AACnB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AAFiB;AAGlB;;;;WAID,kBAAS;AAAA;;AACP,wBAA8B,KAAKD,KAAnC;AAAA,UAAQE,KAAR,eAAQA,KAAR;AAAA,UAAeC,UAAf,eAAeA,UAAf;;AACA,iBAAqBD,KAAK,CAACE,MAAN,IAAgB,IAAhB,GAAuB,OAAvB,GAAiCF,KAAK,CAACE,MAA5D;AAAA,UAAQC,QAAR,QAAQA,QAAR;;AACA,aACE,oBAAC,IAAD,QACE,oBAAC,IAAD,OADF,EAEE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAC,YADR;AAEE,QAAA,OAAO,EAAE,mBAAM;AACb,UAAA,MAAI,CAACL,KAAL,CAAWG,UAAX,CAAsBG,QAAtB,CAA+B,aAA/B;AACD;AAJH,QAFF,EAQE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAC,WADR;AAEE,QAAA,OAAO,EAAE,mBAAM;AACb,UAAA,MAAI,CAACC,QAAL,CAAc;AAAEC,YAAAA,KAAK,EAAEH;AAAT,WAAd;AACD;AAJH,QARF,EAeE,oBAAC,IAAD,kBAAaI,IAAI,CAACC,SAAL,CAAeL,QAAf,CAAb,CAfF,CADF;AAmBD;;;;EA9BiCX,S;;AAAfK,M,CAMZY,Y,GAAe,E;SANHZ,M;AAiCrB,IAAMa,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Text, StyleSheet, View, TextInput, Image, Button } from \"react-native\";\r\nimport Slider from \"@react-native-community/slider\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nimport Grid from \"./CanvasGrid\";\r\n\r\nexport default class Canvas extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  static defaultProps = {};\r\n\r\n  render() {\r\n    const { route, navigation } = this.props;\r\n    const { newColor } = route.params == null ? \"white\" : route.params;\r\n    return (\r\n      <View>\r\n        <Grid></Grid>\r\n        <Button\r\n          title=\"Pick Color\"\r\n          onPress={() => {\r\n            this.props.navigation.navigate(\"ColorPicker\");\r\n          }}\r\n        />\r\n        <Button\r\n          title=\"Set Color\"\r\n          onPress={() => {\r\n            this.setState({ color: newColor });\r\n          }}\r\n        />\r\n\r\n        <Text>color:{JSON.stringify(newColor)}</Text>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({});\r\n"]},"metadata":{},"sourceType":"module"}