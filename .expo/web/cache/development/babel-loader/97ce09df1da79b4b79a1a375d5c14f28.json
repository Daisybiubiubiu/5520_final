{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { TriangleColorPicker } from 'react-native-color-picker';\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this);\n    _this.state = {\n      newColor: 'pink'\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"onColorChange\",\n    value: function onColorChange(color) {\n      this.setState({\n        newColor: color\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          padding: 45,\n          backgroundColor: '#212021'\n        }\n      }, React.createElement(Button, {\n        title: \"Confirm\",\n        onPress: function onPress() {\n          _this2.props.navigation.navigate('Canvas', {\n            newColor: _this2.state.newColor\n          });\n        }\n      }), React.createElement(TriangleColorPicker, {\n        oldColor: \"grey\",\n        onColorSelected: function onColorSelected(color) {\n          return _this2.setState({\n            newColor: color\n          });\n        },\n        style: {\n          flex: 1\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 45,\n    backgroundColor: '#212021'\n  },\n  touchable: {\n    padding: 5\n  },\n  text: {\n    color: 'white'\n  }\n});\nexport default App;","map":{"version":3,"sources":["C:/Users/75196/Documents/GitHub/Javascript/final/components/ColorPicker.js"],"names":["React","TriangleColorPicker","App","state","newColor","color","setState","styles","container","flex","padding","backgroundColor","props","navigation","navigate","Component","StyleSheet","create","touchable","text"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,SAASC,mBAAT,QAAoC,2BAApC;;IAEMC,G;;;;;AACJ,iBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAFY;AAKb;;;;WAED,uBAAcC,KAAd,EAAqB;AACnB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,QAAQ,EAAEC;AAAZ,OAAd;AACD;;;WAED,kBAAS;AAAA;;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEE,MAAM,CAACC;AAApB,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,OAAO,EAAE,EAApB;AAAwBC,UAAAA,eAAe,EAAE;AAAzC;AAAb,SACE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,OAAO,EAAE,mBAAM;AACb,UAAA,MAAI,CAACC,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,QAA/B,EAAyC;AACvCV,YAAAA,QAAQ,EAAE,MAAI,CAACD,KAAL,CAAWC;AADkB,WAAzC;AAGD;AANH,QADF,EAUE,oBAAC,mBAAD;AACE,QAAA,QAAQ,EAAC,MADX;AAEE,QAAA,eAAe,EAAE,yBAACC,KAAD;AAAA,iBAAW,MAAI,CAACC,QAAL,CAAc;AAAEF,YAAAA,QAAQ,EAAEC;AAAZ,WAAd,CAAX;AAAA,SAFnB;AAGE,QAAA,KAAK,EAAE;AAAEI,UAAAA,IAAI,EAAE;AAAR;AAHT,QAVF,CADF,CADF;AAoBD;;;;EAjCeT,KAAK,CAACe,S;;AAoCxB,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,OAAO,EAAE,EAFA;AAGTC,IAAAA,eAAe,EAAE;AAHR,GADoB;AAM/BO,EAAAA,SAAS,EAAE;AACTR,IAAAA,OAAO,EAAE;AADA,GANoB;AAS/BS,EAAAA,IAAI,EAAE;AACJd,IAAAA,KAAK,EAAE;AADH;AATyB,CAAlB,CAAf;AAcA,eAAeH,GAAf","sourcesContent":["import React from 'react';\r\nimport { Button, StyleSheet, View, Text, TouchableOpacity } from 'react-native';\r\nimport { TriangleColorPicker } from 'react-native-color-picker';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      newColor: 'pink',\r\n    };\r\n  }\r\n\r\n  onColorChange(color) {\r\n    this.setState({ newColor: color });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={{ flex: 1, padding: 45, backgroundColor: '#212021' }}>\r\n          <Button\r\n            title=\"Confirm\"\r\n            onPress={() => {\r\n              this.props.navigation.navigate('Canvas', {\r\n                newColor: this.state.newColor,\r\n              });\r\n            }}\r\n          />\r\n\r\n          <TriangleColorPicker\r\n            oldColor=\"grey\"\r\n            onColorSelected={(color) => this.setState({ newColor: color })}\r\n            style={{ flex: 1 }}\r\n          />\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 45,\r\n    backgroundColor: '#212021',\r\n  },\r\n  touchable: {\r\n    padding: 5,\r\n  },\r\n  text: {\r\n    color: 'white',\r\n  },\r\n});\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}