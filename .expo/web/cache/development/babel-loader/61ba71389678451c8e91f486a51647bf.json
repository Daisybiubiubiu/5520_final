{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2, _templateObject3;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Slider from \"@react-native-community/slider\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport styled, { css } from \"styled-components/native\";\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\nimport { EDITOR_BORDER_SIZE, HEADER_HEIGHT, PIXEL_COUNT, PIXEL_SIZE, TOOLS } from \"../constants\";\nvar array = [];\n\nfor (var i = 0; i < PIXEL_COUNT; i++) {\n  for (var j = 0; j < PIXEL_COUNT; j++) {\n    array.push({\n      color: \"white\"\n    });\n  }\n}\n\nvar Wrapper = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  width: 100%;\\n  padding: \", \"px;\\n\"])), EDITOR_BORDER_SIZE);\nvar Grid = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  width: 100%;\\n  height: \", \"px;\\n  background: white;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n\"])), PIXEL_SIZE * PIXEL_COUNT);\nvar PixelBlock = styled.View(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  background: \", \";\\n  height: \", \"px;\\n  width: \", \"px;\\n  \", \"\\n\"])), function (props) {\n  return props.color === \"none\" ? props.backgroundColor : props.color;\n}, PIXEL_SIZE, PIXEL_SIZE, function (_ref) {\n  var displayGrid = _ref.displayGrid,\n      index = _ref.index;\n  return displayGrid && \"\\n    border-bottom-width: 1px;\\n    border-left-width: 1px;\\n    border-right-width: \" + (index % PIXEL_COUNT === 15 ? 1 : 0) + \"px;\\n    border-top-width: \" + (index < PIXEL_COUNT ? 1 : 0) + \"px;\\n  \";\n});\n\nvar CanvasGrid = function (_Component) {\n  _inherits(CanvasGrid, _Component);\n\n  var _super = _createSuper(CanvasGrid);\n\n  function CanvasGrid(props) {\n    var _this;\n\n    _classCallCheck(this, CanvasGrid);\n\n    _this = _super.call(this, props);\n\n    _this.updateCanvas = function (evt, insets) {\n      if (evt.nativeEvent.pageX > EDITOR_BORDER_SIZE + PIXEL_SIZE * PIXEL_COUNT) {\n        return;\n      }\n\n      var tx = evt.nativeEvent.pageX - EDITOR_BORDER_SIZE;\n      var ty = evt.nativeEvent.pageY - EDITOR_BORDER_SIZE - HEADER_HEIGHT;\n      var px = Math.trunc(tx / PIXEL_SIZE);\n      var py = Math.trunc(ty / PIXEL_SIZE);\n      var arrayPosition = py * PIXEL_COUNT + px;\n\n      if (arrayPosition + 1 > _this.state.data.length || arrayPosition < 0) {\n        return;\n      }\n\n      if (_this.state.data[arrayPosition].color === (_this.state.selectedTool === TOOLS.ERASER ? \"none\" : _this.state.currentColor)) {\n        return;\n      }\n\n      var newData = _this.state.data;\n\n      if (_this.state.selectedTool === TOOLS.BUCKET) {} else {\n        newData[arrayPosition] = {\n          color: _this.state.selectedTool === TOOLS.PENCIL ? _this.state.currentColor : \"none\"\n        };\n      }\n\n      _this.setState({\n        data: newData\n      });\n    };\n\n    _this.state = {\n      backgroundColor: \"white\",\n      currentColor: \"pink\",\n      selectedTool: \"pencil\",\n      displayGrid: true,\n      data: array\n    };\n    return _this;\n  }\n\n  _createClass(CanvasGrid, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          route = _this$props.route,\n          navigation = _this$props.navigation;\n      var insets = this.props.insets;\n      return React.createElement(Wrapper, {\n        backgroundColor: this.props.backgroundColor\n      }, React.createElement(Grid, {\n        onStartShouldSetResponder: function onStartShouldSetResponder() {\n          return true;\n        },\n        onStartShouldSetResponderCapture: function onStartShouldSetResponderCapture() {\n          return true;\n        },\n        onMoveShouldSetResponder: function onMoveShouldSetResponder() {\n          return true;\n        },\n        onMoveShouldSetResponderCapture: function onMoveShouldSetResponderCapture() {\n          return true;\n        },\n        onResponderGrant: function onResponderGrant(evt) {\n          return _this2.updateCanvas(evt, insets);\n        },\n        onResponderMove: function onResponderMove(evt) {\n          _this2.updateCanvas(evt, insets);\n        },\n        onResponderTerminationRequest: function onResponderTerminationRequest() {\n          return true;\n        },\n        onShouldBlockNativeResponder: function onShouldBlockNativeResponder() {\n          return true;\n        }\n      }, this.state.data.map(function (pixel, index) {\n        return React.createElement(PixelBlock, {\n          key: index,\n          index: index,\n          backgroundColor: _this2.state.backgroundColor,\n          displayGrid: _this2.state.displayGrid,\n          color: pixel.color,\n          style: {\n            borderColor: \"#E5E5E5\"\n          }\n        });\n      })));\n    }\n  }]);\n\n  return CanvasGrid;\n}(Component);\n\nCanvasGrid.defaultProps = {};\nexport default function (props) {\n  var insets = useSafeAreaInsets();\n  return React.createElement(CanvasGrid, _extends({}, props, {\n    insets: insets\n  }));\n}\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/75196/Documents/GitHub/Javascript/final/components/CanvasGrid.js"],"names":["React","Component","PropTypes","Slider","Picker","styled","css","useSafeAreaInsets","EDITOR_BORDER_SIZE","HEADER_HEIGHT","PIXEL_COUNT","PIXEL_SIZE","TOOLS","array","i","j","push","color","Wrapper","View","Grid","PixelBlock","props","backgroundColor","displayGrid","index","CanvasGrid","updateCanvas","evt","insets","nativeEvent","pageX","tx","ty","pageY","px","Math","trunc","py","arrayPosition","state","data","length","selectedTool","ERASER","currentColor","newData","BUCKET","PENCIL","setState","route","navigation","map","pixel","borderColor","defaultProps","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Text, StyleSheet, View, TextInput, Image, Button } from \"react-native\";\r\nimport Slider from \"@react-native-community/slider\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nimport { PanResponder } from \"react-native\";\r\nimport styled, { css } from \"styled-components/native\";\r\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\r\n\r\nimport {\r\n  EDITOR_BORDER_SIZE,\r\n  HEADER_HEIGHT,\r\n  PIXEL_COUNT,\r\n  PIXEL_SIZE,\r\n  TOOLS\r\n} from \"../constants\";\r\n\r\nlet array = [];\r\nfor (let i = 0; i < PIXEL_COUNT; i++) {\r\n  for (let j = 0; j < PIXEL_COUNT; j++) {\r\n    array.push({ color: \"white\" });\r\n  }\r\n}\r\n\r\nconst Wrapper = styled.View`\r\n  width: 100%;\r\n  padding: ${EDITOR_BORDER_SIZE}px;\r\n`;\r\n\r\nconst Grid = styled.View`\r\n  width: 100%;\r\n  height: ${PIXEL_SIZE * PIXEL_COUNT}px;\r\n  background: white;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst PixelBlock = styled.View`\r\n  background: ${props =>\r\n    props.color === \"none\" ? props.backgroundColor : props.color};\r\n  height: ${PIXEL_SIZE}px;\r\n  width: ${PIXEL_SIZE}px;\r\n  ${({ displayGrid, index }) =>\r\n    displayGrid &&\r\n    `\r\n    border-bottom-width: 1px;\r\n    border-left-width: 1px;\r\n    border-right-width: ${index % PIXEL_COUNT === 15 ? 1 : 0}px;\r\n    border-top-width: ${index < PIXEL_COUNT ? 1 : 0}px;\r\n  `}\r\n`;\r\n\r\nclass CanvasGrid extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      backgroundColor: \"white\",\r\n      currentColor: \"pink\",\r\n      selectedTool: \"pencil\",\r\n      displayGrid: true,\r\n      data: array\r\n    };\r\n  }\r\n  static defaultProps = {};\r\n\r\n  updateCanvas = (evt, insets) => {\r\n    if (evt.nativeEvent.pageX > EDITOR_BORDER_SIZE + PIXEL_SIZE * PIXEL_COUNT) {\r\n      return;\r\n    }\r\n    const tx = evt.nativeEvent.pageX - EDITOR_BORDER_SIZE;\r\n    // const ty =\r\n    //   evt.nativeEvent.pageY - EDITOR_BORDER_SIZE - HEADER_HEIGHT - insets.top;\r\n    const ty = evt.nativeEvent.pageY - EDITOR_BORDER_SIZE - HEADER_HEIGHT;\r\n    const px = Math.trunc(tx / PIXEL_SIZE);\r\n    const py = Math.trunc(ty / PIXEL_SIZE);\r\n    const arrayPosition = py * PIXEL_COUNT + px;\r\n    if (arrayPosition + 1 > this.state.data.length || arrayPosition < 0) {\r\n      return;\r\n    }\r\n    if (\r\n      this.state.data[arrayPosition].color ===\r\n      (this.state.selectedTool === TOOLS.ERASER\r\n        ? \"none\"\r\n        : this.state.currentColor)\r\n    ) {\r\n      return;\r\n    }\r\n    let newData = this.state.data;\r\n    if (this.state.selectedTool === TOOLS.BUCKET) {\r\n      // newData = dropBucket(\r\n      //   newData,\r\n      //   arrayPosition,\r\n      //   currentColor,\r\n      //   data[arrayPosition].color,\r\n      //   newData\r\n      // );\r\n    } else {\r\n      newData[arrayPosition] = {\r\n        color:\r\n          this.state.selectedTool === TOOLS.PENCIL\r\n            ? this.state.currentColor\r\n            : \"none\"\r\n      };\r\n    }\r\n    this.setState({\r\n      data: newData\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { route, navigation } = this.props;\r\n    const { insets } = this.props;\r\n    return (\r\n      <Wrapper backgroundColor={this.props.backgroundColor}>\r\n        <Grid\r\n          onStartShouldSetResponder={() => true}\r\n          onStartShouldSetResponderCapture={() => true}\r\n          onMoveShouldSetResponder={() => true}\r\n          onMoveShouldSetResponderCapture={() => true}\r\n          onResponderGrant={evt => this.updateCanvas(evt, insets)}\r\n          onResponderMove={evt => {\r\n            this.updateCanvas(evt, insets);\r\n          }}\r\n          onResponderTerminationRequest={() => true}\r\n          onShouldBlockNativeResponder={() => true}\r\n        >\r\n          {this.state.data.map((pixel, index) => (\r\n            <PixelBlock\r\n              key={index}\r\n              index={index}\r\n              backgroundColor={this.state.backgroundColor}\r\n              displayGrid={this.state.displayGrid}\r\n              color={pixel.color}\r\n              style={{ borderColor: \"#E5E5E5\" }}\r\n            />\r\n          ))}\r\n        </Grid>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default function(props) {\r\n  const insets = useSafeAreaInsets();\r\n\r\n  return <CanvasGrid {...props} insets={insets} />;\r\n}\r\n\r\nconst styles = StyleSheet.create({});\r\n"]},"metadata":{},"sourceType":"module"}