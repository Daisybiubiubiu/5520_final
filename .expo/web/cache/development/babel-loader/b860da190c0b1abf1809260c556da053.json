{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Slider from \"@react-native-community/slider\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport styled from \"styled-components/native\";\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\nimport { EDITOR_BORDER_SIZE, HEADER_HEIGHT, PIXEL_COUNT, PIXEL_SIZE, Tools } from \"../constants\";\nvar array = [];\n\nfor (var i = 0; i < PIXEL_COUNT; i++) {\n  array.push({\n    color: \"white\"\n  });\n}\n\nvar Wrapper = styled.View < {\n  backgroundColor: \"white\"\n} > \"\\n  background: \" + function (_ref) {\n  var backgroundColor = _ref.backgroundColor;\n  return backgroundColor;\n} + \";\\n  width: 100%;\\n  padding: \" + EDITOR_BORDER_SIZE + \"px;\\n\";\n\nvar Grid = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  width: 100%;\\n  height: \", \"px;\\n  background: white;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n\"])), PIXEL_SIZE * PIXEL_COUNT);\nvar PixelBlock = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  background: \", \";\\n  height: \", \"px;\\n  width: \", \"px;\\n  \", \"\\n\"])), function (_ref2) {\n  var color = _ref2.color,\n      backgroundColor = _ref2.backgroundColor;\n  return color === \"none\" ? backgroundColor : color;\n}, PIXEL_SIZE, PIXEL_SIZE, function (_ref3) {\n  var displayGrid = _ref3.displayGrid,\n      index = _ref3.index;\n  return displayGrid && \"\\n    border-bottom-width: 1px;\\n    border-left-width: 1px;\\n    border-right-width: \" + (index % PIXEL_COUNT === 15 ? 1 : 0) + \"px;\\n    border-top-width: \" + (index < PIXEL_COUNT ? 1 : 0) + \"px;\\n  \";\n});\n\nvar _default = function (_Component) {\n  _inherits(_default, _Component);\n\n  var _super = _createSuper(_default);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _super.call(this, props);\n\n    _this.updateCanvas = function (evt) {\n      if (evt.nativeEvent.pageX > EDITOR_BORDER_SIZE + PIXEL_SIZE * PIXEL_COUNT) {\n        return;\n      }\n\n      var tx = evt.nativeEvent.pageX - EDITOR_BORDER_SIZE;\n      var ty = evt.nativeEvent.pageY - EDITOR_BORDER_SIZE - HEADER_HEIGHT - insets.top;\n      var px = Math.trunc(tx / PIXEL_SIZE);\n      var py = Math.trunc(ty / PIXEL_SIZE);\n      var arrayPosition = py * PIXEL_COUNT + px;\n\n      if (arrayPosition + 1 > data.length || arrayPosition < 0) {\n        return;\n      }\n\n      if (data[arrayPosition].color === (selectedTool === TOOLS.ERASER ? \"none\" : currentColor)) {\n        return;\n      }\n\n      var newData = data;\n\n      if (selectedTool === TOOLS.BUCKET) {} else {\n        newData[arrayPosition] = {\n          color: selectedTool === TOOLS.PENCIL ? currentColor : \"none\"\n        };\n      }\n\n      _this.setState({\n        data: newData\n      });\n    };\n\n    _this.panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n        return true;\n      },\n      onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {\n        return true;\n      },\n      onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {\n        return true;\n      },\n      onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {\n        return true;\n      },\n      onPanResponderGrant: _this.updateCanvas,\n      onPanResponderMove: function onPanResponderMove(evt) {\n        _this.updateCanvas(evt);\n      },\n      onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {\n        return true;\n      },\n      onShouldBlockNativeResponder: function onShouldBlockNativeResponder() {\n        return true;\n      }\n    });\n\n    _this.createGrid = function () {\n      var grid = [];\n      var cellColored = {\n        backgroundColor: _this.state.color,\n        height: 40,\n        width: 40,\n        margin: 5\n      };\n\n      var _loop = function _loop(j) {\n        grid.push(React.createElement(View, {\n          id: j,\n          key: j,\n          style: _this.state.ids[j] === 0 ? styles.cell : cellColored,\n          onStartShouldSetResponder: function onStartShouldSetResponder(ev) {\n            return true;\n          },\n          onMoveShouldSetResponder: function onMoveShouldSetResponder(ev) {\n            return true;\n          },\n          onResponderGrant: function onResponderGrant(ev) {\n            return _this.onResponderGrant(j, ev);\n          },\n          onResponderMove: function onResponderMove(ev) {\n            return _this.onResponderMove(j, ev);\n          },\n          onResponderRelease: function onResponderRelease(ev) {},\n          onResponderTerminationRequest: function onResponderTerminationRequest(ev) {\n            return true;\n          },\n          onResponderTer: function onResponderTer(ev) {}\n        }, React.createElement(Text, null, _this.state.ids[j])));\n      };\n\n      for (var j = 0; j < 25; j++) {\n        _loop(j);\n      }\n\n      return grid;\n    };\n\n    _this.state = {\n      backgroundColor: \"white\",\n      currentColor: \"pink\",\n      selectedTool: \"pencil\",\n      displayGrid: true,\n      ids: array,\n      color: \"pink\",\n      data: array\n    };\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"onResponderGrant\",\n    value: function onResponderGrant(id, ev) {\n      var ids = this.state.ids;\n      ids[id] = 1;\n      this.setState({\n        ids: ids\n      });\n      console.log(\"press start\" + id);\n    }\n  }, {\n    key: \"onResponderMove\",\n    value: function onResponderMove(id, ev) {\n      console.log(\"press move\" + id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          route = _this$props.route,\n          navigation = _this$props.navigation;\n      return React.createElement(Wrapper, {\n        backgroundColor: backgroundColor\n      }, React.createElement(Grid, panResponder.panHandlers, data.map(function (pixel, index) {\n        return React.createElement(PixelBlock, {\n          key: index,\n          index: index,\n          backgroundColor: _this2.props.backgroundColor,\n          displayGrid: displayGrid,\n          color: pixel.color,\n          style: {\n            borderColor: \"#E5E5E5\"\n          }\n        });\n      })));\n    }\n  }]);\n\n  return _default;\n}(Component);\n\n_default.defaultProps = {};\nexport { _default as default };\nvar styles = StyleSheet.create({\n  grid: {\n    height: 260,\n    width: 260,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\"\n  },\n  cell: {\n    backgroundColor: \"grey\",\n    height: 40,\n    width: 40,\n    margin: 5\n  },\n  cellColored: {\n    backgroundColor: \"coral\",\n    height: 40,\n    width: 40,\n    margin: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/75196/Documents/GitHub/Javascript/final/components/Grid.js"],"names":["React","Component","PropTypes","Slider","Picker","styled","useSafeAreaInsets","EDITOR_BORDER_SIZE","HEADER_HEIGHT","PIXEL_COUNT","PIXEL_SIZE","Tools","array","i","push","color","Wrapper","View","backgroundColor","Grid","PixelBlock","displayGrid","index","props","updateCanvas","evt","nativeEvent","pageX","tx","ty","pageY","insets","top","px","Math","trunc","py","arrayPosition","data","length","selectedTool","TOOLS","ERASER","currentColor","newData","BUCKET","PENCIL","setState","panResponder","PanResponder","create","onStartShouldSetPanResponder","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderGrant","onPanResponderMove","onPanResponderTerminationRequest","onShouldBlockNativeResponder","createGrid","grid","cellColored","state","height","width","margin","j","ids","styles","cell","ev","onResponderGrant","onResponderMove","id","console","log","route","navigation","panHandlers","map","pixel","borderColor","defaultProps","StyleSheet","borderWidth","flex","flexDirection","flexWrap"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Text, StyleSheet, View, TextInput, Image, Button } from \"react-native\";\r\nimport Slider from \"@react-native-community/slider\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nimport { PanResponder } from \"react-native\";\r\nimport styled from \"styled-components/native\";\r\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\r\nimport {\r\n  EDITOR_BORDER_SIZE,\r\n  HEADER_HEIGHT,\r\n  PIXEL_COUNT,\r\n  PIXEL_SIZE,\r\n  Tools\r\n} from \"../constants\";\r\n\r\nlet array = [];\r\nfor (let i = 0; i < PIXEL_COUNT; i++) {\r\n  array.push({ color: \"white\" });\r\n}\r\n\r\nconst Wrapper =\r\n  styled.View <\r\n  { backgroundColor: \"white\" } >\r\n  `\r\n  background: ${({ backgroundColor }) => backgroundColor};\r\n  width: 100%;\r\n  padding: ${EDITOR_BORDER_SIZE}px;\r\n`;\r\n\r\nconst Grid = styled.View`\r\n  width: 100%;\r\n  height: ${PIXEL_SIZE * PIXEL_COUNT}px;\r\n  background: white;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst PixelBlock = styled.View`\r\n  background: ${({ color, backgroundColor }) =>\r\n    color === \"none\" ? backgroundColor : color};\r\n  height: ${PIXEL_SIZE}px;\r\n  width: ${PIXEL_SIZE}px;\r\n  ${({ displayGrid, index }) =>\r\n    displayGrid &&\r\n    `\r\n    border-bottom-width: 1px;\r\n    border-left-width: 1px;\r\n    border-right-width: ${index % PIXEL_COUNT === 15 ? 1 : 0}px;\r\n    border-top-width: ${index < PIXEL_COUNT ? 1 : 0}px;\r\n  `}\r\n`;\r\n\r\nexport default class extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      backgroundColor: \"white\",\r\n      currentColor: \"pink\",\r\n      selectedTool: \"pencil\",\r\n      displayGrid: true,\r\n      ids: array,\r\n      color: \"pink\",\r\n      data: array\r\n    };\r\n  }\r\n  static defaultProps = {};\r\n\r\n  updateCanvas = evt => {\r\n    if (evt.nativeEvent.pageX > EDITOR_BORDER_SIZE + PIXEL_SIZE * PIXEL_COUNT) {\r\n      return;\r\n    }\r\n    const tx = evt.nativeEvent.pageX - EDITOR_BORDER_SIZE;\r\n    const ty =\r\n      evt.nativeEvent.pageY - EDITOR_BORDER_SIZE - HEADER_HEIGHT - insets.top;\r\n    const px = Math.trunc(tx / PIXEL_SIZE);\r\n    const py = Math.trunc(ty / PIXEL_SIZE);\r\n    const arrayPosition = py * PIXEL_COUNT + px;\r\n    if (arrayPosition + 1 > data.length || arrayPosition < 0) {\r\n      return;\r\n    }\r\n    if (\r\n      data[arrayPosition].color ===\r\n      (selectedTool === TOOLS.ERASER ? \"none\" : currentColor)\r\n    ) {\r\n      return;\r\n    }\r\n    let newData = data;\r\n    if (selectedTool === TOOLS.BUCKET) {\r\n      // newData = dropBucket(\r\n      //   newData,\r\n      //   arrayPosition,\r\n      //   currentColor,\r\n      //   data[arrayPosition].color,\r\n      //   newData\r\n      // );\r\n    } else {\r\n      newData[arrayPosition] = {\r\n        color: selectedTool === TOOLS.PENCIL ? currentColor : \"none\"\r\n      };\r\n    }\r\n    this.setState({\r\n      data: newData\r\n    });\r\n  };\r\n\r\n  panResponder = PanResponder.create({\r\n    onStartShouldSetPanResponder: () => true,\r\n    onStartShouldSetPanResponderCapture: () => true,\r\n    onMoveShouldSetPanResponder: () => true,\r\n    onMoveShouldSetPanResponderCapture: () => true,\r\n    onPanResponderGrant: this.updateCanvas,\r\n    onPanResponderMove: evt => {\r\n      this.updateCanvas(evt);\r\n    },\r\n    onPanResponderTerminationRequest: () => true,\r\n    onShouldBlockNativeResponder: () => true\r\n  });\r\n\r\n  onResponderGrant(id, ev) {\r\n    let ids = this.state.ids;\r\n    ids[id] = 1;\r\n    this.setState({\r\n      ids\r\n    });\r\n    console.log(`press start${id}`);\r\n  }\r\n\r\n  onResponderMove(id, ev) {\r\n    // let ids = this.state.ids;\r\n    // ids[id] = 1;\r\n    // this.setState({\r\n    //   ids\r\n    // });\r\n    console.log(`press move${id}`);\r\n  }\r\n\r\n  createGrid = () => {\r\n    let grid = [];\r\n\r\n    let cellColored = {\r\n      backgroundColor: this.state.color,\r\n      height: 40,\r\n      width: 40,\r\n      margin: 5\r\n    };\r\n\r\n    for (let j = 0; j < 25; j++) {\r\n      grid.push(\r\n        <View\r\n          id={j}\r\n          key={j}\r\n          style={this.state.ids[j] === 0 ? styles.cell : cellColored}\r\n          onStartShouldSetResponder={ev => true}\r\n          onMoveShouldSetResponder={ev => true}\r\n          onResponderGrant={ev => this.onResponderGrant(j, ev)}\r\n          onResponderMove={ev => this.onResponderMove(j, ev)}\r\n          onResponderRelease={ev => {}}\r\n          onResponderTerminationRequest={ev => true}\r\n          onResponderTer={ev => {}}\r\n        >\r\n          <Text>{this.state.ids[j]}</Text>\r\n        </View>\r\n      );\r\n    }\r\n    return grid;\r\n  };\r\n\r\n  render() {\r\n    const { route, navigation } = this.props;\r\n\r\n    return (\r\n      <Wrapper backgroundColor={backgroundColor}>\r\n        <Grid {...panResponder.panHandlers}>\r\n          {data.map((pixel, index) => (\r\n            <PixelBlock\r\n              key={index}\r\n              index={index}\r\n              backgroundColor={this.props.backgroundColor}\r\n              displayGrid={displayGrid}\r\n              color={pixel.color}\r\n              style={{ borderColor: \"#E5E5E5\" }}\r\n            />\r\n          ))}\r\n        </Grid>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  grid: {\r\n    height: 260,\r\n    width: 260,\r\n    borderColor: \"gray\",\r\n    borderWidth: 1,\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  cell: {\r\n    backgroundColor: \"grey\",\r\n    height: 40,\r\n    width: 40,\r\n    margin: 5\r\n  },\r\n  cellColored: {\r\n    backgroundColor: \"coral\",\r\n    height: 40,\r\n    width: 40,\r\n    margin: 5\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}